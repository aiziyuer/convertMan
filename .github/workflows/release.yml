name: Release

on:
  release:
    types: [published]

jobs:
  release-linux-386:
    name: release linux/386
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: set env
      run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF:10}
    - name: add version
      run: |
        sed -i '/version = "dev"/d' cmd/version.go
        cat <<EOF >>cmd/version.go
        var version = "$RELEASE_VERSION.$GITHUB_SHA"
        EOF
    - name: compile and release
      uses: ngs/go-release.action@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CGO_ENABLED: 0
        GOARCH: "386"
        GOOS: linux
  release-linux-amd64:
    name: release linux/amd64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: compile and release
      uses: ngs/go-release.action@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CGO_ENABLED: 0
        GOARCH: amd64
        GOOS: linux
  release-darwin-amd64:
    name: release darwin/amd64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: compile and release
      uses: ngs/go-release.action@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CGO_ENABLED: 0
        GOARCH: amd64
        GOOS: darwin
  release-windows-386:
    name: release windows/386
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: compile and release
      uses: ngs/go-release.action@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CGO_ENABLED: 0
        GOARCH: "386"
        GOOS: windows
  release-windows-amd64:
    name: release windows/amd64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: compile and release
      uses: ngs/go-release.action@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CGO_ENABLED: 0
        GOARCH: amd64
        GOOS: windows